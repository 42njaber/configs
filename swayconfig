
set $keyboard "1:1:AT_Translated_Set_2_keyboard"
set $mod Mod4

input type:keyboard {
	events enabled
	xkb_layout "fr(azerty),us"
	xkb_options grp:rctrl_rshift_toggle
	repeat_delay 200
	repeat_rate 35
}

input type:mouse {
	pointer_accel 1
	accel_profile "adaptive"
}

input "1267:12350:ELAN1200:00_04F3:303E_Mouse" {
	events disabled
}

input type:touchpad {
	events enabled
	dwt "enabled"
	pointer_accel 0.3
	accel_profile "adaptive"
	scroll_method "two_finger"
#	scroll_button "disable"
	tap "disabled"
	drag "disable"
	drag_lock "disabled"
	click_method "clickfinger"
}

output * {
	bg #444488 solid_color
	adaptive_sync on
}
exec_always "swaymsg output '*' bg ~/wallpapers/desktop.* fill"

output Virtual-1 {
	mode 1440x900
}

#set $term foot
set $term alacritty --option window.opacity=0.5 -e /bin/bash
set $info alacritty --class "Info" -t "Window info" -e /bin/bash -c
#set $menu wofi --show run
set $menu rofi -no-lazy-grab -show run | xargs swaymsg exec --

bindsym $mod+Return exec $term
bindsym $mod+Shift+a kill
bindsym $mod+d exec $menu
bindsym $mod+n exec i3-dmenu-desktop --dmenu="rofi -no-lazy-grab -dmenu -i" | xargs swaymsg exec --

bindsym $mod+Shift+r reload
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

bindsym $mod+i exec $info 'vim <(swaymsg -t get_tree | jq ".. | objects | select(.focused == true)")'

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+z layout tabbed
bindsym $mod+e layout toggle split

workspace_layout stacking

# toggle tiling / floating
bindsym $mod+u floating toggle
bindsym $mod+Shift+u focus mode_toggle

# focus the parent container
bindsym $mod+q focus parent

# focus the child container
bindsym $mod+Shift+q focus child

# switch to workspace
bindcode $mod+10 workspace 1
bindcode $mod+11 workspace 2
bindcode $mod+12 workspace 3
bindcode $mod+13 workspace 4
bindcode $mod+14 workspace 5
bindcode $mod+15 workspace 6
bindcode $mod+16 workspace 7
bindcode $mod+17 workspace 8
bindcode $mod+18 workspace 9
bindcode $mod+19 workspace 10

# move focused container to workspace
bindcode $mod+Shift+10 move container to workspace 1
bindcode $mod+Shift+11 move container to workspace 2
bindcode $mod+Shift+12 move container to workspace 3
bindcode $mod+Shift+13 move container to workspace 4
bindcode $mod+Shift+14 move container to workspace 5
bindcode $mod+Shift+15 move container to workspace 6
bindcode $mod+Shift+16 move container to workspace 7
bindcode $mod+Shift+17 move container to workspace 8
bindcode $mod+Shift+18 move container to workspace 9
bindcode $mod+Shift+19 move container to workspace 10

bindsym $mod+y move workspace to left
bindsym $mod+Shift+y move workspace to right

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
	bindsym h resize shrink width 10 px or 10 ppt
	bindsym j resize grow height 10 px or 10 ppt
	bindsym k resize shrink height 10 px or 10 ppt
	bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
	bindsym Left move left
	bindsym Down move down
	bindsym Up move up
	bindsym Right move right

# back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"

	bindsym Space move position mouse
}

bindsym $mod+r mode "resize"

# Disables all other bindings while a VM is focused
mode "VM" {
	bindsym $mod+Escape mode "default"
}

bindsym $mod+Shift+v mode "VM"

bindsym $mod+w exec "rofi -no-lazy-grab -show window"

bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle

bindsym XF86MonBrightnessUp		exec --no-startup-id /opt/bin/backlight +5
bindsym XF86MonBrightnessDown	exec --no-startup-id /opt/bin/backlight -5

bindsym $mod+Print exec 'FILE=/tmp/screenshot.png; XDG_CURRENT_DESKTOP=Sway flameshot gui -s -r > "$FILE"; gimp -a "$FILE"; swaymsg "[class=\"Gimp\"] focus"'
bindsym Print exec 'FILE=/tmp/screenshot.png; XDG_CURRENT_DESKTOP=Sway flameshot full -r > "$FILE"; gimp -a "$FILE"; swaymsg "[class=\"Gimp\"] focus"'

bindsym Pause exec bash ~/configs/switchtouch.sh

bindsym $mod+control+g exec firefox -new-tab https://translate.google.com; [class="Firefox"] focus

bindsym $mod+shift+z	exec "sleep 1; xset dpms force off"
bindsym $mod+shift+s	exec $HOME/configs/scripts/sway-screenshare.sh
bindsym $mod+shift+p	exec "killall -s INT wf-recorder || wf-recorder -a -f rec.mp4"
bindsym $mod+shift+c	exec $HOME/configs/scripts/autoclick.sh

# Use Mouse+$mod to drag floating windows to their wanted position
# floating_modifier $mod

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.  font pango:inconsolata 10

titlebar_padding 30 5

default_border pixel 10
hide_edge_borders --i3 none
focus_follows_mouse no
focus_wrapping no
workspace_auto_back_and_forth no

# Colors

set $border_focus	#64727DFF
set $border			#2B303B7F

client.focused          $border_focus	$border_focus	#ffffff		#ffaa00		$border
client.focused_inactive $border_focus	$border_focus	#ffffff		#ffaa00		$border
client.unfocused        $border			$border			#FFFFFF7F
client.urgent           #2f343a			#900000			#ffffff
client.placeholder      #000000			#0c0c0c			#ffffff

font pango:DejaVu Sans Mono 8

bar {
	swaybar_command waybar
}

#for_window [title=".*"] floating enable
for_window [app_id="Info"] floating enable, resize set 900 600
for_window [class="QtWeb"] floating disabled
#for_window [class="feh" title=""] floating disabled

for_window [class="Alacritty"] floating disabled
for_window [class="Vieb"] floating disabled

assign [class="discord"] 4
for_window [class="discord" title="Discord"] workspace 4
assign [class="zoom"] 4
for_window [class="zoom"] workspace 4

#assign [class="Upwork"] 5
#for_window [class="Upwork"] workspace 5, layout split
#for_window [class="Upwork" title="Control Panel"] move position 0 px 0 px, resize set 100 px 100 pt
#for_window [class="Upwork" title="Time Tracker"] move position 100 px 0 px, resize set 100 px 100 pt
assign [class="Gimp.*"] 10
for_window [class="Gimp.*"] workspace

set $inactive_opacity ~/configs/scripts/daemonize.sh inactive_opacity ~/configs/scripts/inactive-windows-transparency.py -o
exec $inactive_opacity 0.80

bindsym $mod+o exec $inactive_opacity 0.80
bindsym $mod+shift+o exec $inactive_opacity 1.00

set $autotile ~/configs/scripts/daemonize.sh autotile ~/configs/scripts/tile-big-windows.py
exec $autotile -w 1000 -h 800

bindsym $mod+t exec hamster start
bindsym $mod+ctrl+t exec hamster overview
bindsym $mod+shift+t exec hamster stop

exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

exec_always gsettings set org.gnome.desktop.interface cursor-theme "Yaru"

exec "XDG_CURRENT_DESKTOP=wayland systemctl --user import-environment DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP SWAYSOCK"
exec "systemctl --user restart xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-wlr"
exec_always "if ! pgrep nm-applet; then nm-applet; fi"
#exec_always "killall blueman-applet; XDG_CURRENT_DESKTOP=Unity blueman-applet"
#exec "ydotoold"
exec_always "XDG_CURRENT_DESKTOP=Sway flameshot"
#exec "gnome-power-manager --verbose"

exec "hash dbus-update-activation-environment 2>/dev/null && dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK"

exec '$term & swaymsg "assign [pid="$!"] 1"'
exec 'vieb & swaymsg "assign [pid="$!"] 2"'

